import hashlib
import random
import time
import queue
import asyncio
import requests 
import os


my_apikey = "0fda8296874342cb2311f553a9afdb3cf4ac97b021ca6d263695e2f053825112"

container = {}
q = queue.Queue()

def get_file_path(filename):
    current_directory = os.getcwd()
    file_path = os.path.join(current_directory + "/filename/", filename)
    if os.path.exists(file_path):
        return file_path
    else:
        return None

def maketoken():
    rawid = random.randint(-2147483648, 2147483647) + int(time.time())
    return hashlib.sha256(str(rawid).encode()).hexdigest()

def virustotal_upload(filename:str):
    
    files = get_file_path(filename)
    token = maketoken()
    
    while token in container:
        token = maketoken()                                                     # 토큰 생성 

    container[token] = {"File_Path":files, "status":"ready", "detected":False, "detail":[] }          # 토큰과 결합된 상태정보 생성

    q.put((token, filename))                                                    # q에 token과 filename 결합한 것을 넣음ss
    asyncio.run(__virustotal_progress())                                        # virustotal 실행 

    return token

async def __virustotal_progress():
    while True:
        
        token, filename = q.get(block=True, timeout=None)                       # q가 빌때까지 token과 filename 가져옴  
        
        info = container[token]                                                 # token과 결합된 상태정보 
        info["status"] = "progress"                                             # 상태 progress로 바꿈
        try:
             file = get_file_path(filename)
             files = {'file': (file, open(file, 'rb'))}
             url_scan = 'https://www.virustotal.com/vtapi/v2/file/scan'         # # 바이러스토탈 파일 스캔 주소
             url_scan_params = {'apikey': my_apikey}
             response_scan = requests.post(url_scan, files=files, params=url_scan_params) # 바이러스토탈 파일 스캔 시작
             result_scan = response_scan.json()
             scan_resource = result_scan['resource']

             url_report = 'https://www.virustotal.com/vtapi/v2/file/report'
             url_report_params = {'apikey': my_apikey, 'resource': scan_resource}

             response_report = requests.get(url_report, params=url_report_params)

             report = response_report.json()                                            # 점검 결과 데이터 추출
             report_scan_result = report.get('scans')
             report_scan_vendors = list(report['scans'].keys())

             num = 0

             for vendor in report_scan_vendors:                                       # 바이러스 스캔 엔진사별 데이터 정리
                 print(num)
                 outputs = report_scan_result[vendor]
                 outputs_detected = report_scan_result[vendor].get('detected')

                 if outputs_detected:                                                 # 악성이 감지됐다면 container[token] 상태 변경
                     info["detected"] = True                                          # 상태 감지됐다로 변경
                     VENDORNAME = {"Vendor Name" : vendor} 
                     info["detail"].append(VENDORNAME)                                # 정보 추가 ex.) {'Vendor Name' : 'vendor','detected': False, 'version': '4.6.4.2', 'result': None, 'update': '20231128'}
                     info["detail"][num].update(outputs)
                 num = num + 1

             info["status"] = "done"
             time.sleep(15)                                                          # 무료버전은 1분당 파일 전송 4회로 제한되어있음.
       # except Exception:
       #     pass
             with open("status.txt", "a") as file:
                file.write(str(container))

        finally:
            if info["status"] != "done":
                info["status"] = "error"

virustotal_upload("example.txt")
